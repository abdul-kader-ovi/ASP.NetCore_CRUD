@model ClassRoutineManagement.Models.Subject

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Create</h1>

<h4>Subject</h4>
<hr />
<div class="col-11 mx-auto pt-0">
    <div class="card">
        <div class="card-header bg-primary text-uppercase text-white">
            <h4>Create Subject</h4>
        </div>
        <form asp-action="Create" enctype="multipart/form-data">
            <div class="row">
                <div class="col-md-6">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="SubjectName" class="control-label"></label>   
                        <input asp-for="SubjectName" class="form-control" />
                        <span asp-validation-for="SubjectName" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="SubjectCode" class="control-label"></label>
                        <input asp-for="SubjectCode" class="form-control" />
                        <span asp-validation-for="SubjectCode" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-12">
                    <table id="ExpTable" class="table table-striped table-sm">
                        <thead>
                            <tr>
                                <th>TeacherName</th>
                                <th>Email</th>
                                <th>Qualification</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.Teachers.Count; i++)
                            {
                                <tr>
                                    <td>
                                        @Html.EditorFor(x => x.Teachers[i].Name, new { htmlAttributes = new { @class = "form-control" } })
                                        <span asp-validation-for="@Model.Teachers[i].Name" class="text-danger"></span>
                                    </td>
                                    <td>
                                        @Html.EditorFor(x => x.Teachers[i].Email, new { htmlAttributes = new { @class = "form-control" } })
                                        <span asp-validation-for="@Model.Teachers[i].Email" class="text-danger"></span>
                                    </td>
                                    <td>
                                        @Html.EditorFor(x => x.Teachers[i].Qualification, new { htmlAttributes = new { @class = "form-control" } })
                                        <span asp-validation-for="@Model.Teachers[i].Qualification" class="text-danger"></span>
                                    </td>
                                    <td>
                                        <button id="btndummy" type="button" class="btn btn-sm invisible">Dummy</button>

                                        <button id="btnadd-@i" type="button" class="btn btn-sm btn-secondary visible" onclick="AddItem(this)" style="left:90%; position:absolute">
                                        Add</button>
                                        <button id="btnremove-@i" type="button" class="btn btn-sm btn-danger invisible " onclick="DeleteItem(this)" style="left:90%; position:absolute">Delete</button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>

                </div>

                <input type="hidden" id="hdnLastIndex" value="0"/>

                <div class="col-12 btn-group">
                    <div class="col-6 form-group text-right p-2">
                        <a asp-action="Index" class="btn btn-secondary">&nbsp;Back&nbsp;</a>
                    </div>
                    <div class="col-6 form-group text-left p-2">
                        <input type="submit" value="Create" class="btn btn-primary"/>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script type="text/javascript">
        $(".custom-file-input").on("change", function () {
            var fileName = $(this).val().split("\\").pop();
            $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
        });

        function DeleteItem(btn) {
            $(btn).closest('tr').remove();
        }

        function AddItem(btn) {

            var table = document.getElementById('ExpTable');
            var rows = table.getElementsByTagName('tr');

            var rowOuterHtml = rows[rows.length - 1].outerHTML;

            var lastrowIdx = document.getElementById('hdnLastIndex').value;

            var nextrowIdx = eval(lastrowIdx) + 1;

            document.getElementById('hdnLastIndex').value = nextrowIdx;

            rowOuterHtml = rowOuterHtml.replaceAll('_' + lastrowIdx + '_', '_' + nextrowIdx + '_');
            rowOuterHtml = rowOuterHtml.replaceAll('[' + lastrowIdx + ']', '[' + nextrowIdx + ']');
            rowOuterHtml = rowOuterHtml.replaceAll('-' + lastrowIdx, '-' + nextrowIdx);


            var newRow = table.insertRow();
            newRow.innerHTML = rowOuterHtml;

            var btnAddID = btn.id;
            var btnDeleteid = btnAddID.replaceAll('btnadd', 'btnremove');

            var delbtn = document.getElementById(btnDeleteid);
            delbtn.classList.add("visible");
            delbtn.classList.remove("invisible");

            var addbtn = document.getElementById(btnAddID);
            addbtn.classList.remove("visible");
            addbtn.classList.add("invisible");

        }

    </script>
}
